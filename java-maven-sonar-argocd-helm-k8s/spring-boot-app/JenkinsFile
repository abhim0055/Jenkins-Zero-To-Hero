pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Set Environment') {
            environment {
                PATH = "$PATH:/usr/bin/docker"
            }
            steps {
                sh 'echo Environment set'
            }
        }
        stage('Checkout') {
            steps {
                sh 'echo passed'
                git branch: 'main', credentialsId: 'github-auth', url: 'https://github.com/abhim0055/Jenkins-Zero-To-Hero.git'
            }
        }
        stage('Build and Test') {
            steps {
                sh 'ls -ltr'
                // build the project and create a JAR file
                sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
            environment {
                SONAR_URL = "http://192.168.79.215:9000" // Replace with your SonarQube server URL
            }
            steps {
                // Run Maven with SonarQube analysis
                script {
                    // Use withCredentials to securely provide the SonarQube token
                    withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                        // Inside this block, you can access the credential value using the specified variable name
                        // The credential value will be securely injected into the environment variable SONAR_AUTH_TOKEN
                        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn -X sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
                    }
                }
            }
        }
    }
}
